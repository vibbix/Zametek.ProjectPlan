<UserControl x:Class="Zametek.View.ProjectPlan.ArrowGraphManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:graphxCtrl="clr-namespace:GraphX.Controls;assembly=GraphX.WPF.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Zametek.View.ProjectPlan"
             xmlns:properties="clr-namespace:Zametek.Resource.ProjectPlan;assembly=Zametek.Resource.ProjectPlan"
             xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>

        <Style TargetType="{x:Type graphxCtrl:AttachableEdgeLabelControl}">
            <Setter Property="ShowLabel" Value="True"/>
            <Setter Property="LabelVerticalOffset" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphxCtrl:AttachableEdgeLabelControl}">
                        <Border BorderBrush="Transparent" BorderThickness="0" Background="White" CornerRadius="3">
                            <StackPanel Margin="2">
                                <TextBlock Visibility="{Binding Path=AttachNode.Edge.CannotBeRemoved, Converter={StaticResource BooleanToVisibility}}"
                                           HorizontalAlignment="Center"
                                           Foreground="Black">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=AttachNode.Edge.IsDummy}" Value="True">
                                                    <Setter Property="Text" Value="{Binding Path=AttachNode.Edge.ID, Mode=OneWay, StringFormat={}{0}}"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Path=AttachNode.Edge.IsDummy}" Value="False">
                                                    <Setter Property="Text">
                                                        <Setter.Value>
                                                            <MultiBinding StringFormat="{}{0} ({1})">
                                                                <Binding Path="AttachNode.Edge.ID" Mode="OneWay"/>
                                                                <Binding Path="AttachNode.Edge.Duration" Mode="OneWay"/>
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Visibility="{Binding Path=AttachNode.Edge.IsNotCritical, Converter={StaticResource BooleanToVisibility}}"
                                           HorizontalAlignment="Center"
                                           Foreground="Black">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}|{1}">
                                            <Binding Path="AttachNode.Edge.FreeSlack" Mode="OneWay"/>
                                            <Binding Path="AttachNode.Edge.TotalSlack" Mode="OneWay"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="DisplayForSelfLoopedEdges" Value="False"/>
        </Style>

        <Style TargetType="{x:Type graphxCtrl:EdgeControl}">
            <Setter Property="Foreground" Value="{Binding Path=ForegroundHexCode, Mode=OneWay}"/>
            <Setter Property="DashStyle" Value="{Binding Path=DashStyle, Mode=OneWay}"/>
            <Setter Property="StrokeThickness" Value="{Binding Path=StrokeThickness, Mode=OneWay}"/>
        </Style>
    </UserControl.Resources>
    
    <!--<i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding Path=NotificationInteractionRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True"
                                     CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:BasicNotificationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>-->
    
    <DockPanel>
        <Grid Width="150"
              DockPanel.Dock="Right"
              Background="LightGray">
            <DockPanel Margin="7">
                <Button Padding="3"
                        Margin="0,7,0,0"
                        DockPanel.Dock="Bottom"
                        Content="{x:Static properties:Resources.Label_ExportGraphML}"
                        Click="ExportGraphML_Click"/>

                <Button Padding="3"
                        Margin="0,7,0,0"
                        DockPanel.Dock="Bottom"
                        Content="{x:Static properties:Resources.Label_ResetGraph}"
                        Click="ResetGraph_Click"/>

                <Button Padding="3"
                        Margin="0,7,0,0"
                        DockPanel.Dock="Bottom"
                        Command="{Binding Path=GenerateArrowGraphCommand, Mode=OneWay}"
                        Content="{x:Static properties:Resources.Label_GenerateArrowGraph}"/>

                <Grid />
            </DockPanel>
        </Grid>

        <Grid Margin="3">
            <graphxCtrl:ZoomControl x:Name="ZoomCtrl"
                                    BorderThickness="2">
                <local:ArrowGraphArea x:Name="ArrowGraphAreaCtrl">
                    <local:ArrowGraphArea.LogicCore>
                        <local:ArrowGraphGXLogicCore EnableParallelEdges="False" />
                    </local:ArrowGraphArea.LogicCore>
                </local:ArrowGraphArea>
                <graphxCtrl:ZoomControl.Style>
                    <Style TargetType="{x:Type graphxCtrl:ZoomControl}"
                           BasedOn="{StaticResource {x:Type graphxCtrl:ZoomControl}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=HasStaleArrowGraph, Mode=OneWay}" Value="True">
                                <Setter Property="BorderBrush" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </graphxCtrl:ZoomControl.Style>
            </graphxCtrl:ZoomControl>
        </Grid>

        <DockPanel.Style>
            <Style TargetType="DockPanel">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsBusy, Mode=OneWay}" Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsBusy, Mode=OneWay}" Value="False">
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </DockPanel.Style>
    </DockPanel>
</UserControl>
